import { Button } from '@/componenst/button/button';
import ContactFormModal, { ContactInterface } from '@/componenst/contact-form-modal/contact-form-modal';
import ContactListItem from '@/componenst/contact-list-item/contact-list-item';
import { Icon } from '@/componenst/icon';
import axios from 'axios';
import Head from 'next/head';
import Image from 'next/image';
import * as React from 'react';
import { useEffect, useState } from 'react';
import profile_pic from '../../public/assets/images/profile_pic.png';

export default function Home() {
    const [isModalOpen, setIsModalOpen] = useState<boolean>(false);
    const [contacts, setContacts] = useState<any>([]);

    const fetchContacts = async () => {
        try {
            const result = await axios('/api/contacts');
            setContacts(result?.data);
        } catch (e) {
            console.log(e);
        }
    };

    useEffect(() => {
        (async () => await fetchContacts())();
    }, []);

    const handleDelete = async (id: number) => {
        try {
            await axios.delete(`/api/contacts/${id}`);
            await fetchContacts();
        } catch (e: any) {
            console.log(e);
        }
    };

    const handleSubmit = async (payload: ContactInterface | null) => {
        try {
            await axios.post('/api/contacts', {
                ...payload,
            });
            await fetchContacts();
        } catch (e: any) {
            console.log(e);
        }
    };

    const handleUpdate = async (payload: ContactInterface | null, id: string | undefined) => {
        try {
            await axios.patch(`/api/contacts/${id}`, {
                ...payload,
            });
            await fetchContacts();
        } catch (e: any) {
            console.log(e);
        }
    };

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>
            <main className={'home-screen'}>
                <ContactFormModal
                    type={'create'}
                    isOpen={isModalOpen}
                    setOpen={setIsModalOpen}
                    handleSubmit={handleSubmit}
                />

                <div className={'header-spacer'} />

                <div className={'header display-flex justify-content-center'}>
                    <div className={'row justify-content-center align-items-center'}>
                        <Button
                            type={'secondary'}
                            icon={<Icon icon={'back-arrow'} size={24}/>}
                            className={'header-item mr-auto ml-6 ml-sm-0 mr-sm-6'}
                        />

                        <div className={'header-item content-wrapper display-flex align-items-center justify-content-between'}>
                            <h1>Contacts</h1>

                            <div className={'display-flex align-items-center'}>
                                <Button
                                    icon={<Icon
                                        icon={'settings'}
                                        size={24}
                                    />}
                                    className={'mr-2'}
                                    type={'secondary'}
                                />

                                <Button
                                    icon={<Image
                                        src={profile_pic}
                                        width={24} height={24}
                                        alt={'profile image'}
                                    />}
                                    className={'mr-6'}
                                    type={'secondary'}
                                />

                                <Button
                                    icon={<Icon icon={'add'} size={24} wrapperClasses={'mr-2'}/>}
                                    type={'special'}
                                    title={'Add new'}
                                    onClick={() => setIsModalOpen(true)}
                                />
                            </div>
                        </div>

                        <Button
                            type={'secondary'}
                            icon={<Icon icon={'light-mode'} size={24}/>}
                            className={'header-item ml-auto mr-6 mr-sm-0 ml-sm-6'}
                        />
                    </div>
                </div>

                <div className={'contents display-flex justify-content-center'}>
                    <div className={'content-wrapper'}>
                        {
                            contacts.map((contact: any) => {
                                return <ContactListItem
                                    key={contact.id}
                                    contact={contact}
                                    handleDelete={handleDelete}
                                    handleUpdate={handleUpdate}
                                />;
                            })
                        }
                    </div>
                </div>
            </main>
        </>
    );
}
